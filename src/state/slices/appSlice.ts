import { createSlice } from '@reduxjs/toolkit';
import { AppState, Board, Player } from 'utils/types';

const initialAppState: AppState = {
    boardType: Board.Board9,
    boardStatus: {
        [Board.Board9]: new Array(9).fill(''),
        [Board.Board36]: new Array(36).fill(''),
        [Board.Board81]: new Array(81).fill('')
    },
    board9Status: new Array(9).fill(''),
    board36Status: new Array(36).fill(''),
    board81Status: new Array(81).fill(''),
    isGameStarted: false,
    totalGameTime: 0,
    currentGameTime: 0
};

/**
 * This portion of the state is used to control the layout of the app. For a simple
 * app such as this, the only requirement is to keep track of what person is selected
 * and the search string
 * */
const appSlice = createSlice({
    name: 'app',
    initialState: initialAppState,
    reducers: {
        board9StatusChanged: (state, { payload }) => {
            state.boardType = payload;
        },
        boardTypeChanged: (state, { payload }) => {
            state.boardType = payload;
        },
        boardStatusChanged: (state, { payload }) => {
            const { boardType, squareIndex, currentPlayer }: { boardType: Board, squareIndex: number, currentPlayer: Player } = payload;
            const newStatusArray = Array.from(state.boardStatus[boardType]);
            newStatusArray[squareIndex] = currentPlayer;
            state.boardStatus[boardType] = newStatusArray;
        },
        gameStarted: (state) => {
            state.isGameStarted = true;
        },
        gameFinished: (state) => {
            state.isGameStarted = false;
        },
        gameTimeIncremented: (state) => {
            state.totalGameTime = state.totalGameTime + 1;
            state.currentGameTime = state.currentGameTime + 1;
        },
        gameTimeReset: (state) => {
            state.currentGameTime = 0;
        }
    }
});

// Redux actions automatically generated by redux toolkit based on the reducer names
export const { boardTypeChanged, boardStatusChanged } = appSlice.actions;

export default appSlice;